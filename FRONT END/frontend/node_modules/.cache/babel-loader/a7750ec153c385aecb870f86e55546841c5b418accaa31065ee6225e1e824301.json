{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\OpenSSL-Win64\\\\APDS_POE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\paymentPortal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../AuthContext.js'; // Import the AuthContext\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Grid, Alert, Snackbar, MenuItem, Select, InputLabel, FormControl, Box } from '@mui/material'; // MUI components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currencySymbols = {\n  ZAR: 'R',\n  USD: '$',\n  GBP: '£',\n  INR: '₹',\n  JPY: '¥'\n  // Add more currencies as needed\n};\nconst PaymentPortal = () => {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext); // Use the context\n  const [formData, setFormData] = useState({\n    recipientName: '',\n    recipientBank: '',\n    recipientAccountNo: '',\n    amount: '',\n    swiftCode: '',\n    username: auth.username,\n    // Automatically add the logged-in username\n    date: new Date().toISOString().split('T')[0] // Automatically add the current date\n  });\n  const [currency, setCurrency] = useState('ZAR'); // State for selected currency, default to South African Rand\n  const [successMessage, setSuccessMessage] = useState(''); // State for success message\n  const [errorMessage, setErrorMessage] = useState(''); // State for form-wide error message\n  const [fieldErrors, setFieldErrors] = useState({}); // State for individual field errors\n  const [openSnackbar, setOpenSnackbar] = useState(false); // State to control Snackbar\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setFieldErrors({\n      ...fieldErrors,\n      [e.target.name]: ''\n    }); // Clear field errors when user types\n  };\n  const handleCurrencyChange = e => {\n    setCurrency(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFieldErrors({}); // Reset field errors\n\n    try {\n      console.log('Sending payment data:', {\n        ...formData,\n        currency,\n        currencySymbol: currencySymbols[currency]\n      }); // Log the data being sent\n      await axios.post('https://localhost:3001/payment', {\n        ...formData,\n        currency,\n        currencySymbol: currencySymbols[currency] // Include the selected currency symbol in the request\n      }, {\n        headers: {\n          'Authorization': `Bearer ${auth.token}` // Include the token in the headers\n        }\n      });\n      // Update the success message state\n      setSuccessMessage('Payment has been made successfully!');\n      setErrorMessage(''); // Clear any previous error messages\n      // Open Snackbar\n      setOpenSnackbar(true);\n      // Clear the form data\n      setFormData({\n        recipientName: '',\n        recipientBank: '',\n        recipientAccountNo: '',\n        amount: '',\n        swiftCode: '',\n        username: auth.username,\n        date: new Date().toISOString().split('T')[0] // Reset the date to the current date\n      });\n      setCurrency('ZAR'); // Reset the currency to default\n    } catch (error) {\n      console.error('Error making payment:', error); // Log error\n\n      if (error.response && error.response.data && error.response.data.fieldErrors) {\n        // Handle validation error and set field-specific messages\n        setFieldErrors(error.response.data.fieldErrors); // Set field errors from the server\n      } else if (error.response && error.response.data && error.response.data.message) {\n        setErrorMessage(error.response.data.message); // Set a global error message\n      } else {\n        setErrorMessage('An error occurred while making the payment'); // Generic error message\n      }\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false); // Close Snackbar after the duration ends or when user clicks close\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Payment Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 2\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Recipient's Name\",\n              name: \"recipientName\",\n              fullWidth: true,\n              value: formData.recipientName,\n              onChange: handleChange,\n              required: true,\n              error: !!fieldErrors.recipientName // MUI error display\n              ,\n              helperText: fieldErrors.recipientName // MUI error message under input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Recipient's Bank\",\n              name: \"recipientBank\",\n              fullWidth: true,\n              value: formData.recipientBank,\n              onChange: handleChange,\n              required: true,\n              error: !!fieldErrors.recipientBank // MUI error display\n              ,\n              helperText: fieldErrors.recipientBank // MUI error message under input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Recipient's Account No\",\n              name: \"recipientAccountNo\",\n              fullWidth: true,\n              value: formData.recipientAccountNo,\n              onChange: handleChange,\n              required: true,\n              error: !!fieldErrors.recipientAccountNo // MUI error display\n              ,\n              helperText: fieldErrors.recipientAccountNo // MUI error message under input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: currency,\n              onChange: handleCurrencyChange,\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"ZAR\",\n                children: \"ZAR - South African Rand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"USD\",\n                children: \"USD - Dollar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"GBP\",\n                children: \"GBP - Pound\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"INR\",\n                children: \"INR - Rupees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"JPY\",\n                children: \"JPY - Yen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: `Amount to Transfer (${currencySymbols[currency]})`,\n              name: \"amount\",\n              type: \"number\",\n              fullWidth: true,\n              value: formData.amount,\n              onChange: handleChange,\n              required: true,\n              error: !!fieldErrors.amount // MUI error display\n              ,\n              helperText: fieldErrors.amount // MUI error message under input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"SWIFT Code\",\n              name: \"swiftCode\",\n              fullWidth: true,\n              value: formData.swiftCode,\n              onChange: handleChange,\n              required: true,\n              error: !!fieldErrors.swiftCode // MUI error display\n              ,\n              helperText: fieldErrors.swiftCode // MUI error message under input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Pay Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: () => {\n                setFormData({\n                  recipientName: '',\n                  recipientBank: '',\n                  recipientAccountNo: '',\n                  amount: '',\n                  swiftCode: '',\n                  username: auth.username,\n                  date: new Date().toISOString().split('T')[0]\n                });\n                setCurrency('ZAR'); // Reset the currency to default\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mt: 2\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 3000 // Automatically close after 3 seconds\n      ,\n      onClose: handleCloseSnackbar,\n      message: \"Payment Successful\",\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      } // Position at the top-center of the screen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentPortal, \"97qxsUiCTalrEiYXZVD/N13P6pg=\");\n_c = PaymentPortal;\nexport default PaymentPortal;\nvar _c;\n$RefreshReg$(_c, \"PaymentPortal\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","axios","TextField","Button","Container","Typography","Grid","Alert","Snackbar","MenuItem","Select","InputLabel","FormControl","Box","jsxDEV","_jsxDEV","currencySymbols","ZAR","USD","GBP","INR","JPY","PaymentPortal","_s","auth","formData","setFormData","recipientName","recipientBank","recipientAccountNo","amount","swiftCode","username","date","Date","toISOString","split","currency","setCurrency","successMessage","setSuccessMessage","errorMessage","setErrorMessage","fieldErrors","setFieldErrors","openSnackbar","setOpenSnackbar","handleChange","e","target","name","value","handleCurrencyChange","handleSubmit","preventDefault","console","log","currencySymbol","post","headers","token","error","response","data","message","handleCloseSnackbar","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","onSubmit","container","spacing","item","xs","fullWidth","label","onChange","required","helperText","type","justifyContent","color","onClick","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS_POE/FRONT END/frontend/src/components/paymentPortal.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../AuthContext.js'; // Import the AuthContext\r\nimport axios from 'axios';\r\nimport { TextField, Button, Container, Typography, Grid, Alert, Snackbar, MenuItem, Select, InputLabel, FormControl, Box } from '@mui/material'; // MUI components\r\n\r\nconst currencySymbols = {\r\n    ZAR: 'R',\r\n    USD: '$',\r\n    GBP: '£',\r\n    INR: '₹',\r\n    JPY: '¥'\r\n    // Add more currencies as needed\r\n};\r\n\r\nconst PaymentPortal = () => {\r\n    const { auth } = useContext(AuthContext); // Use the context\r\n    const [formData, setFormData] = useState({\r\n        recipientName: '',\r\n        recipientBank: '',\r\n        recipientAccountNo: '',\r\n        amount: '',\r\n        swiftCode: '',\r\n        username: auth.username, // Automatically add the logged-in username\r\n        date: new Date().toISOString().split('T')[0] // Automatically add the current date\r\n    });\r\n    const [currency, setCurrency] = useState('ZAR'); // State for selected currency, default to South African Rand\r\n    const [successMessage, setSuccessMessage] = useState(''); // State for success message\r\n    const [errorMessage, setErrorMessage] = useState(''); // State for form-wide error message\r\n    const [fieldErrors, setFieldErrors] = useState({}); // State for individual field errors\r\n    const [openSnackbar, setOpenSnackbar] = useState(false); // State to control Snackbar\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        setFieldErrors({ ...fieldErrors, [e.target.name]: '' }); // Clear field errors when user types\r\n    };\r\n\r\n    const handleCurrencyChange = (e) => {\r\n        setCurrency(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setFieldErrors({}); // Reset field errors\r\n\r\n        try {\r\n            console.log('Sending payment data:', { ...formData, currency, currencySymbol: currencySymbols[currency] }); // Log the data being sent\r\n            await axios.post('https://localhost:3001/payment', {\r\n                ...formData,\r\n                currency,\r\n                currencySymbol: currencySymbols[currency] // Include the selected currency symbol in the request\r\n            }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.token}` // Include the token in the headers\r\n                }\r\n            });\r\n            // Update the success message state\r\n            setSuccessMessage('Payment has been made successfully!');\r\n            setErrorMessage(''); // Clear any previous error messages\r\n            // Open Snackbar\r\n            setOpenSnackbar(true);\r\n            // Clear the form data\r\n            setFormData({\r\n                recipientName: '',\r\n                recipientBank: '',\r\n                recipientAccountNo: '',\r\n                amount: '',\r\n                swiftCode: '',\r\n                username: auth.username,\r\n                date: new Date().toISOString().split('T')[0] // Reset the date to the current date\r\n            });\r\n            setCurrency('ZAR'); // Reset the currency to default\r\n        } catch (error) {\r\n            console.error('Error making payment:', error); // Log error\r\n            \r\n            if (error.response && error.response.data && error.response.data.fieldErrors) {\r\n                // Handle validation error and set field-specific messages\r\n                setFieldErrors(error.response.data.fieldErrors); // Set field errors from the server\r\n            } else if (error.response && error.response.data && error.response.data.message) {\r\n                setErrorMessage(error.response.data.message); // Set a global error message\r\n            } else {\r\n                setErrorMessage('An error occurred while making the payment'); // Generic error message\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setOpenSnackbar(false); // Close Snackbar after the duration ends or when user clicks close\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Payment Portal\r\n            </Typography>\r\n\r\n            {/* Display global form error message at the top with less alarming \"warning\" severity */}\r\n            {errorMessage && (\r\n                <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                label=\"Recipient's Name\"\r\n                                name=\"recipientName\"\r\n                                fullWidth\r\n                                value={formData.recipientName}\r\n                                onChange={handleChange}\r\n                                required\r\n                                error={!!fieldErrors.recipientName} // MUI error display\r\n                                helperText={fieldErrors.recipientName} // MUI error message under input\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                label=\"Recipient's Bank\"\r\n                                name=\"recipientBank\"\r\n                                fullWidth\r\n                                value={formData.recipientBank}\r\n                                onChange={handleChange}\r\n                                required\r\n                                error={!!fieldErrors.recipientBank} // MUI error display\r\n                                helperText={fieldErrors.recipientBank} // MUI error message under input\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                label=\"Recipient's Account No\"\r\n                                name=\"recipientAccountNo\"\r\n                                fullWidth\r\n                                value={formData.recipientAccountNo}\r\n                                onChange={handleChange}\r\n                                required\r\n                                error={!!fieldErrors.recipientAccountNo} // MUI error display\r\n                                helperText={fieldErrors.recipientAccountNo} // MUI error message under input\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl fullWidth required>\r\n                            <InputLabel>Currency</InputLabel>\r\n                            <Select\r\n                                value={currency}\r\n                                onChange={handleCurrencyChange}\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value=\"ZAR\">ZAR - South African Rand</MenuItem>\r\n                                <MenuItem value=\"USD\">USD - Dollar</MenuItem>\r\n                                <MenuItem value=\"GBP\">GBP - Pound</MenuItem>\r\n                                <MenuItem value=\"INR\">INR - Rupees</MenuItem>\r\n                                <MenuItem value=\"JPY\">JPY - Yen</MenuItem>\r\n                                {/* Add more currencies as needed */}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                label={`Amount to Transfer (${currencySymbols[currency]})`}\r\n                                name=\"amount\"\r\n                                type=\"number\"\r\n                                fullWidth\r\n                                value={formData.amount}\r\n                                onChange={handleChange}\r\n                                required\r\n                                error={!!fieldErrors.amount} // MUI error display\r\n                                helperText={fieldErrors.amount} // MUI error message under input\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                label=\"SWIFT Code\"\r\n                                name=\"swiftCode\"\r\n                                fullWidth\r\n                                value={formData.swiftCode}\r\n                                onChange={handleChange}\r\n                                required\r\n                                error={!!fieldErrors.swiftCode} // MUI error display\r\n                                helperText={fieldErrors.swiftCode} // MUI error message under input\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* Buttons */}\r\n                <Box mt={3}>\r\n                    <Grid container spacing={2} justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                                Pay Now\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                onClick={() => {\r\n                                    setFormData({\r\n                                        recipientName: '',\r\n                                        recipientBank: '',\r\n                                        recipientAccountNo: '',\r\n                                        amount: '',\r\n                                        swiftCode: '',\r\n                                        username: auth.username,\r\n                                        date: new Date().toISOString().split('T')[0]\r\n                                    });\r\n                                    setCurrency('ZAR'); // Reset the currency to default\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </form>\r\n\r\n            {/* Display success message */}\r\n            {successMessage && (\r\n                <Alert severity=\"success\" sx={{ mt: 2 }}>\r\n                    {successMessage}\r\n                </Alert>\r\n            )}\r\n\r\n            {/* Snackbar for pop-up message */}\r\n            <Snackbar\r\n                open={openSnackbar}\r\n                autoHideDuration={3000} // Automatically close after 3 seconds\r\n                onClose={handleCloseSnackbar}\r\n                message=\"Payment Successful\"\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }} // Position at the top-center of the screen\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PaymentPortal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}