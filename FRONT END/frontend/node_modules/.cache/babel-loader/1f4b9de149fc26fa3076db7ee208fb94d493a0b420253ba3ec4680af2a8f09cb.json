{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\OpenSSL-Win64\\\\APDS LAB GUIDE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    password: \"\"\n  });\n  const navigation = useNavigation();\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  //This function will handle the submission\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    //when a post request is sent to the create url, we'll create a new user in the database.\n    const newPerson = {\n      ...form\n    };\n    await fetch('https://localhost:3001/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      password: \"\"\n    });\n    naviagate(\"/\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"passsword\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"password\",\n          value: form.password,\n          onChange: e => updateForm({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Person\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"oaq6p8jJVuMqvH07MpsvXAPtFmM=\", false, function () {\n  return [useNavigation];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigation","jsxDEV","_jsxDEV","Register","_s","form","setForm","name","password","navigation","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","naviagate","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS LAB GUIDE/FRONT END/frontend/src/components/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigation } from 'react-router';\r\n\r\n\r\nexport default function Register() {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const navigation = useNavigation();\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    //This function will handle the submission\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //when a post request is sent to the create url, we'll create a new user in the database.\r\n        const newPerson = { ...form };\r\n\r\n        await fetch('https://localhost:3001/user/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newPerson),\r\n        })\r\n            .catch(error => {\r\n                window.alert(error);\r\n                return;\r\n            })\r\n\r\n        setForm({\r\n            name: \"\",\r\n            password: \"\",\r\n        });\r\n        naviagate(\"/\");\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Register</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <lable htmlFor=\"name\">Name</lable>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id='name'\r\n                        value={form.name}\r\n                        onChange={(e) => updateForm({ name: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"passsword\">Password</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id='password'\r\n                        value={form.password}\r\n                        onChange={(e) => updateForm({ password: e.target.value })}\r\n                    />\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='submit'\r\n                        value='Create Person'\r\n                        className='btn btn-primary'\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}