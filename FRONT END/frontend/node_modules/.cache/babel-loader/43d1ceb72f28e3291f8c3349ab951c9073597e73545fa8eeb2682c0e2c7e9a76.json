{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\OpenSSL-Win64\\\\APDS LAB GUIDE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\postList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.post.user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.post.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      //Convert base64 string to image\n      src: 'data:image/jpeg;base64, ${props.post.image}',\n      alt: \"Post Image\",\n      style: {\n        maxWidth: '100px',\n        maxHeight: '100px',\n        objectFit: 'cover'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deletePost(props.post._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Post;\nexport default function PostList() {\n  _s();\n  const [post, setPosts] = useState([]);\n  useEffect(() => {\n    async function getPosts() {\n      const response = await fetch('https://localhost:3000/post/');\n      if (!response.ok) {\n        const message = 'An error occured: ${response.statusText}';\n        window.alert(message);\n        return;\n      }\n      const posts = await response.json();\n      setPosts(posts);\n    }\n    getPosts();\n    return;\n  }, [posts.length]);\n  async function deletePost(id) {\n    const token = localStorage.getItem('jwt');\n    await fetch('https://localhost:3000/post/${id}', {\n      method: 'DELETE',\n      headers: {\n        'Authorization': 'Bearer ${token}'\n      }\n    });\n    const newPosts = posts.filter(el => el._id !== id);\n    setPosts(newPosts);\n  }\n  function PostList() {\n    return posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        deletePost: () => deletePost(post._id)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    });\n  }\n}\n_s(PostList, \"ZoA856eg3v6hgSIwv0o45K47CTI=\");\n_c2 = PostList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Post","props","children","post","user","fileName","_jsxFileName","lineNumber","columnNumber","content","image","src","alt","style","maxWidth","maxHeight","objectFit","className","onClick","deletePost","_id","_c","PostList","_s","setPosts","getPosts","response","fetch","ok","message","window","alert","posts","json","length","id","token","localStorage","getItem","method","headers","newPosts","filter","el","map","_c2","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS LAB GUIDE/FRONT END/frontend/src/components/postList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nconst Post = (props) => (\r\n  <tr>\r\n    <td>{props.post.user}</td>\r\n    <td>{props.post.content}</td>\r\n    <td>\r\n      {props.post.image && (\r\n        <img\r\n          //Convert base64 string to image\r\n          src={'data:image/jpeg;base64, ${props.post.image}'}\r\n          alt=\"Post Image\"\r\n          style={{ maxWidth: '100px', maxHeight: '100px', objectFit: 'cover' }}\r\n        />\r\n      )}\r\n    </td>\r\n    <td>\r\n      <button className='btn btn-link' onClick={() => {\r\n        props.deletePost(props.post._id);\r\n      }}>\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default function PostList() {\r\n  const [post, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      const response = await fetch('https://localhost:3000/post/');\r\n\r\n      if (!response.ok) {\r\n        const message = 'An error occured: ${response.statusText}';\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const posts = await response.json();\r\n      setPosts(posts);\r\n    }\r\n    getPosts();\r\n    return;\r\n\r\n  }, [posts.length]);\r\n\r\n  async function deletePost(id) {\r\n    const token = localStorage.getItem('jwt');\r\n    await fetch('https://localhost:3000/post/${id}', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': 'Bearer ${token}',\r\n      },\r\n    });\r\n\r\n    const newPosts = posts.filter((el) => el._id !== id);\r\n    setPosts(newPosts);\r\n  }\r\n\r\n  function PostList() {\r\n    return posts.map((post) => {\r\n      return (\r\n        <Post\r\n          post={post}\r\n          deletePost={() => deletePost(post._id)}\r\n          key={post._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}