{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\OneDrive - ADvTECH Ltd\\\\Varsity college\\\\Third Year\\\\Second Semester\\\\APDS7311\\\\POE\\\\2\\\\Main\\\\APDS_POE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\NotificationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { AuthContext } from '../AuthContext.js';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './NotificationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationPage = () => {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [readNotifications, setReadNotifications] = useState(new Set(JSON.parse(localStorage.getItem('readNotifications')) || []));\n\n  // Fetch the notifications for the user\n  const fetchNotifications = useCallback(async () => {\n    try {\n      const response = await axios.get(`https://localhost:3001/notifications/${auth.username}`, {\n        headers: {\n          Authorization: `Bearer ${auth.token}`\n        },\n        params: {\n          username: auth.username\n        }\n      });\n      if (response.status === 200) {\n        setNotifications(response.data);\n      } else {\n        console.error(\"Error: Received non-200 response\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error.message);\n    }\n  }, [auth.token, auth.username]);\n\n  // Mark a notification as read\n  const markAsRead = id => {\n    setReadNotifications(prev => {\n      const updated = new Set(prev).add(id);\n      localStorage.setItem('readNotifications', JSON.stringify(Array.from(updated)));\n      return updated;\n    });\n  };\n  useEffect(() => {\n    if (!auth.token) {\n      navigate('/'); // Redirect to home page if not authenticated\n    } else {\n      fetchNotifications();\n    }\n  }, [auth.token, fetchNotifications, navigate]);\n\n  // Helper function to format the date\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    };\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', options).replace(/(\\d{2})\\/(\\w{3})\\/(\\d{4})/, '$3 - $2 - $1').toUpperCase();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notification-list\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `notification-card ${readNotifications.has(notification._id) ? 'read' : 'unread'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `fade-up`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 38\n          }, this), \" \", notification.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `fade-up`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 38\n          }, this), \" \", formatDate(notification.date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), !readNotifications.has(notification._id) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `fade-up`,\n          onClick: () => markAsRead(notification._id),\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, notification._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPage, \"WkJfXkkxtAOkKRPwN7KXjBY8oeY=\", false, function () {\n  return [useNavigate];\n});\n_c = NotificationPage;\nexport default NotificationPage;\nvar _c;\n$RefreshReg$(_c, \"NotificationPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","AuthContext","useNavigate","axios","jsxDEV","_jsxDEV","NotificationPage","_s","auth","navigate","notifications","setNotifications","readNotifications","setReadNotifications","Set","JSON","parse","localStorage","getItem","fetchNotifications","response","get","username","headers","Authorization","token","params","status","data","console","error","message","markAsRead","id","prev","updated","add","setItem","stringify","Array","from","formatDate","dateString","options","year","month","day","date","Date","toLocaleDateString","replace","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","has","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vicky/OneDrive - ADvTECH Ltd/Varsity college/Third Year/Second Semester/APDS7311/POE/2/Main/APDS_POE/FRONT END/frontend/src/components/NotificationPage.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { AuthContext } from '../AuthContext.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './NotificationPage.css';\r\n\r\nconst NotificationPage = () => {\r\n  const { auth } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [readNotifications, setReadNotifications] = useState(new Set(JSON.parse(localStorage.getItem('readNotifications')) || []));\r\n\r\n  // Fetch the notifications for the user\r\n  const fetchNotifications = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://localhost:3001/notifications/${auth.username}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${auth.token}`,\r\n        },\r\n        params: {\r\n          username: auth.username,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setNotifications(response.data);\r\n      } else {\r\n        console.error(\"Error: Received non-200 response\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching notifications:\", error.message);\r\n    }\r\n  }, [auth.token, auth.username]);\r\n\r\n  // Mark a notification as read\r\n  const markAsRead = (id) => {\r\n    setReadNotifications((prev) => {\r\n      const updated = new Set(prev).add(id);\r\n      localStorage.setItem('readNotifications', JSON.stringify(Array.from(updated)));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!auth.token) {\r\n      navigate('/'); // Redirect to home page if not authenticated\r\n    } else {\r\n      fetchNotifications();\r\n    }\r\n  }, [auth.token, fetchNotifications, navigate]);\r\n\r\n  // Helper function to format the date\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'short', day: '2-digit' };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', options).replace(/(\\d{2})\\/(\\w{3})\\/(\\d{4})/, '$3 - $2 - $1').toUpperCase();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Notifications History</h2>\r\n      <ul className=\"notification-list\">\r\n        {notifications.map(notification => (\r\n          <li key={notification._id} className={`notification-card ${readNotifications.has(notification._id) ? 'read' : 'unread'}`}>\r\n            <p className={`fade-up`}><strong>Message:</strong> {notification.message}</p>\r\n            <p className={`fade-up`}><strong>Date:</strong> {formatDate(notification.date)}</p>\r\n            {!readNotifications.has(notification._id) && (\r\n              <button className={`fade-up`} onClick={() => markAsRead(notification._id)}>Mark as Read</button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}