{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\OpenSSL-Win64\\\\APDS LAB GUIDE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\postCreate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNaviagate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [form, setForm] = useState({\n    user: \"\",\n    content: \"\",\n    image: \"\"\n  });\n  const naviagate = useNaviagate();\n\n  //Retrieve the user from localstorage when the components mounts\n  useEffect(() => {\n    const savedUser = localStorage.getItem('name');\n    if (savedUser) {\n      setForm(prev => ({\n        ...prev,\n        user: savedUser\n      }));\n    } else {\n      //Redirect to login or another page if there is no user\n      naviagate('/login');\n    }\n  }, [navigate('/login')]);\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  //Function to handle image file change\n  async function handleImageChange(e) {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const base64String = reader.result.split(\",\")[1];\n          updateForm({\n            image: base64String\n          });\n        };\n        reader.readAsDataURL(file);\n      } catch (error) {\n        window.alert(\"error reading image file\");\n      }\n    }\n  }\n\n  // Function to handle form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n    const token = localStorage.getItem(\"jwt\");\n    const newPost = {\n      user: form.user,\n      content: form.content,\n      image: form.image\n    };\n    try {\n      const response = await fetch(\"https://localhost:3001/post/upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      console.log('post Created:', result);\n\n      //setForm({ user: form.user, content: \"\", image: \"\" });\n      navigate(\"/\");\n    } catch (error) {\n      window.alert(error);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"header\",\n        children: \"Create New post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"user\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"user\",\n            value: form.user,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"content\",\n            value: form.content,\n            onChange: e => updateForm({\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            id: \"image\",\n            accept: \"image/*\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create Post\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(CreatePost, \"NhqdosVVtEQPIVAk1jOQKLDdXhI=\", false, function () {\n  return [useNaviagate];\n});\n_c = CreatePost;\n;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","useNaviagate","jsxDEV","_jsxDEV","CreatePost","_s","form","setForm","user","content","image","naviagate","savedUser","localStorage","getItem","prev","navigate","updateForm","value","handleImageChange","e","file","target","files","reader","FileReader","onloadend","base64String","result","split","readAsDataURL","error","window","alert","onSubmit","preventDefault","token","newPost","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","disabled","onChange","htmlfor","accept","_c","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS LAB GUIDE/FRONT END/frontend/src/components/postCreate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNaviagate } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nexport default function CreatePost() {\r\n    const [form, setForm] = useState({\r\n        user: \"\",\r\n        content: \"\",\r\n        image: \"\",\r\n    });\r\n    const naviagate = useNaviagate();\r\n\r\n    //Retrieve the user from localstorage when the components mounts\r\n    useEffect(() => {\r\n        const savedUser = localStorage.getItem('name');\r\n        if (savedUser) {\r\n            setForm((prev) => ({\r\n                ...prev,\r\n                user: savedUser,\r\n            }));\r\n        } else {\r\n            //Redirect to login or another page if there is no user\r\n            naviagate('/login');\r\n        }\r\n    }, [navigate('/login')]);\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    //Function to handle image file change\r\n    async function handleImageChange(e) {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            try {\r\n                const reader = new FileReader();\r\n                reader.onloadend = () => {\r\n                    const base64String = reader.result.split(\",\")[1];\r\n                    updateForm({ image: base64String });\r\n                };\r\n                reader.readAsDataURL(file);\r\n            } catch (error) {\r\n                window.alert(\"error reading image file\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // Function to handle form submission\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const token = localStorage.getItem(\"jwt\");\r\n\r\n        const newPost = {\r\n            user: form.user,\r\n            content: form.content,\r\n            image: form.image,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(\"https://localhost:3001/post/upload\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(newPost),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log('post Created:', result);\r\n\r\n            //setForm({ user: form.user, content: \"\", image: \"\" });\r\n            navigate(\"/\");\r\n\r\n        } catch (error) {\r\n            window.alert(error);\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h3 className=\"header\">Create New post</h3>\r\n                <form onSubmit={onSubmit} className=\"form\">\r\n                    <div className='form-group'>\r\n                        <label htmlFor='user'>User</label>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='user'\r\n                            value={form.user}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor='content'>Content</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className='form-control'\r\n                            id=\"content\"\r\n                            value={form.content}\r\n                            onChange={(e) => updateForm({ content: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlfor='image'>Image</label>\r\n                        <input\r\n                            type='file'\r\n                            className='form-control'\r\n                            id='image'\r\n                            accept='image/*'\r\n                            onChange={handleImageChange}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='submit'\r\n                            value='Create Post'\r\n                            className='btn btn-primary'\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}