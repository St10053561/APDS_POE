{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\OpenSSL-Win64\\\\APDS LAB GUIDE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Register component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  // State to manage form data\n  const [form, setForm] = useState({\n    name: '',\n    password: ''\n  });\n\n  // Hook to navigate programmatically\n  const navigate = useNavigate();\n\n  // Function to update form state\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // Function to handle form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // Create a new person object\n    const newPerson = {\n      ...form\n    };\n\n    // Send a POST request to the server\n    await fetch('https://localhost:3001/user/signup/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    // Reset the form state\n    setForm({\n      name: '',\n      password: ''\n    });\n    // Navigate to the home page\n    navigate('/');\n  }\n\n  // JSX to render the form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // Input type is text\n          ,\n          className: \"form-control\" // Bootstrap class for styling\n          ,\n          id: \"name\" // ID for the input field\n          ,\n          value: form.name // Value is bound to form.name state\n          ,\n          onChange: e => updateForm({\n            name: e.target.value\n          }) // Update form state on change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // Input type is text\n          ,\n          className: \"form-control\" // Bootstrap class for styling\n          ,\n          id: \"password\" // ID for the input field\n          ,\n          value: form.password // Value is bound to form.password state\n          ,\n          onChange: e => updateForm({\n            password: e.target.value\n          }) // Update form state on change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\" // Input type is submit\n          ,\n          value: \"Create Person\" // Text displayed on the button\n          ,\n          className: \"btn btn-primary\" // Bootstrap class for styling\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"tjGSer4vcnJiKP8/LAGVUGXUdjU=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","form","setForm","name","password","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS LAB GUIDE/FRONT END/frontend/src/components/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Register component\r\nexport default function Register() {\r\n    // State to manage form data\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        password: ''\r\n    });\r\n\r\n    // Hook to navigate programmatically\r\n    const navigate = useNavigate();\r\n\r\n    // Function to update form state\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    // Function to handle form submission\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        // Create a new person object\r\n        const newPerson = { ...form };\r\n\r\n        // Send a POST request to the server\r\n        await fetch('https://localhost:3001/user/signup/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newPerson)\r\n        })\r\n            .catch(error => {\r\n                window.alert(error);\r\n                return;\r\n            });\r\n\r\n        // Reset the form state\r\n        setForm({ name: '', password: '' });\r\n        // Navigate to the home page\r\n        navigate('/');\r\n    }\r\n\r\n    // JSX to render the form\r\n    return (\r\n        <div className='container'>\r\n            <h3>Register</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\" // Input type is text\r\n                        className=\"form-control\" // Bootstrap class for styling\r\n                        id='name' // ID for the input field\r\n                        value={form.name} // Value is bound to form.name state\r\n                        onChange={(e) => updateForm({ name: e.target.value })} // Update form state on change\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"text\" // Input type is text\r\n                        className=\"form-control\" // Bootstrap class for styling\r\n                        id='password' // ID for the input field\r\n                        value={form.password} // Value is bound to form.password state\r\n                        onChange={(e) => updateForm({ password: e.target.value })} // Update form state on change\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='submit' // Input type is submit\r\n                        value='Create Person' // Text displayed on the button\r\n                        className='btn btn-primary' // Bootstrap class for styling\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}