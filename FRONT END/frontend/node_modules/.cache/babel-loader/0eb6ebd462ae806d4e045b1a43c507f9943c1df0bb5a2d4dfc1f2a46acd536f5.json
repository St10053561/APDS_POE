{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\APDS_POE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ForgotPassword.css';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n  const [form, setForm] = useState({\n    identifier: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  function updateForm(value) {\n    setErrors({}); // Clear errors when updating form\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (form.newPassword !== form.confirmPassword) {\n      setErrors({\n        confirmPassword: 'Passwords do not match'\n      });\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:3001/user/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          identifier: form.identifier,\n          newPassword: form.newPassword,\n          confirmPassword: form.confirmPassword\n        })\n      });\n      if (!response.ok) {\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (jsonError) {\n          throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);\n        }\n        const fieldErrors = {};\n        if (Array.isArray(errorData.errors)) {\n          errorData.errors.forEach(error => {\n            fieldErrors[error.field] = error.message;\n          });\n        } else {\n          fieldErrors.general = 'Password reset failed';\n        }\n        setErrors(fieldErrors);\n        return;\n      }\n      window.alert('Password has been reset successfully');\n      navigate('/login');\n    } catch (error) {\n      console.error('Error during password reset:', error);\n      setErrors({\n        general: error.message\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title text-center mb-4\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"identifier\",\n                  children: \"Username or Account Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"identifier\",\n                  value: form.identifier,\n                  onChange: e => updateForm({\n                    identifier: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), errors.identifier && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.identifier\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"newPassword\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"newPassword\",\n                  value: form.newPassword,\n                  onChange: e => updateForm({\n                    newPassword: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), errors.newPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.newPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"confirmPassword\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"confirmPassword\",\n                  value: form.confirmPassword,\n                  onChange: e => updateForm({\n                    confirmPassword: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: errors.confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Submit\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message text-center\",\n                children: errors.general\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n// Adding keyframe animation for background shift\n_s(ForgotPassword, \"kmEF3BgTea7M8q/s/s5keDZKesU=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nconst styleSheet = document.styleSheets[0];\nstyleSheet.insertRule(`\n    @keyframes backgroundShift {\n        0% { background: linear-gradient(135deg, #f8f9fa, #e9ecef); }\n        100% { background: linear-gradient(135deg, #e9ecef, #d6d8db); }\n    }\n`, styleSheet.cssRules.length);\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","form","setForm","identifier","newPassword","confirmPassword","errors","setErrors","navigate","updateForm","value","prev","onSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","jsonError","Error","status","statusText","fieldErrors","Array","isArray","forEach","error","field","message","general","window","alert","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","target","required","_c","styleSheet","document","styleSheets","insertRule","cssRules","length","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/APDS_POE/FRONT END/frontend/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ForgotPassword.css';\r\nimport './Login.css';\r\n\r\n\r\nexport default function ForgotPassword() {\r\n    const [form, setForm] = useState({\r\n        identifier: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const navigate = useNavigate();\r\n\r\n    function updateForm(value) {\r\n        setErrors({}); // Clear errors when updating form\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (form.newPassword !== form.confirmPassword) {\r\n            setErrors({ confirmPassword: 'Passwords do not match' });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('https://localhost:3001/user/forgot-password', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    identifier: form.identifier,\r\n                    newPassword: form.newPassword,\r\n                    confirmPassword: form.confirmPassword\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let errorData;\r\n                try {\r\n                    errorData = await response.json();\r\n                } catch (jsonError) {\r\n                    throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);\r\n                }\r\n                const fieldErrors = {};\r\n                if (Array.isArray(errorData.errors)) {\r\n                    errorData.errors.forEach(error => {\r\n                        fieldErrors[error.field] = error.message;\r\n                    });\r\n                } else {\r\n                    fieldErrors.general = 'Password reset failed';\r\n                }\r\n                setErrors(fieldErrors);\r\n                return;\r\n            }\r\n\r\n            window.alert('Password has been reset successfully');\r\n            navigate('/login');\r\n        } catch (error) {\r\n            console.error('Error during password reset:', error);\r\n            setErrors({ general: error.message });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title text-center mb-4\">Forgot Password</h3>\r\n                            <form onSubmit={onSubmit}>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor=\"identifier\">Username or Account Number</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"identifier\"\r\n                                        value={form.identifier}\r\n                                        onChange={(e) => updateForm({ identifier: e.target.value })}\r\n                                        required\r\n                                    />\r\n                                    {errors.identifier && <div className=\"error-message\">{errors.identifier}</div>}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor=\"newPassword\">New Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        id=\"newPassword\"\r\n                                        value={form.newPassword}\r\n                                        onChange={(e) => updateForm({ newPassword: e.target.value })}\r\n                                        required\r\n                                    />\r\n                                    {errors.newPassword && <div className=\"error-message\">{errors.newPassword}</div>}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        id=\"confirmPassword\"\r\n                                        value={form.confirmPassword}\r\n                                        onChange={(e) => updateForm({ confirmPassword: e.target.value })}\r\n                                        required\r\n                                    />\r\n                                    {errors.confirmPassword && <div className=\"error-message\">{errors.confirmPassword}</div>}\r\n                                </div>\r\n                                <div className=\"form-group text-center\">\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Submit\"\r\n                                        className=\"btn btn-primary\"\r\n                                    />\r\n                                </div>\r\n                                {errors.general && <div className=\"error-message text-center\">{errors.general}</div>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Adding keyframe animation for background shift\r\nconst styleSheet = document.styleSheets[0];\r\nstyleSheet.insertRule(`\r\n    @keyframes backgroundShift {\r\n        0% { background: linear-gradient(135deg, #f8f9fa, #e9ecef); }\r\n        100% { background: linear-gradient(135deg, #e9ecef, #d6d8db); }\r\n    }\r\n`, styleSheet.cssRules.length);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}