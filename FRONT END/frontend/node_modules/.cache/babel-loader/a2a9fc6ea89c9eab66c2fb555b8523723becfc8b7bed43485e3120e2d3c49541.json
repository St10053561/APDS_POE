{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jodyv\\\\Desktop\\\\APDS_POE-1\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\EmployeeForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeForgotPassword() {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  function updateForm(value) {\n    setErrors({}); // Clear errors when updating form\n    setForm(prev => ({\n      ...prev,\n      ...value\n    }));\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (form.newPassword !== form.confirmPassword) {\n      setErrors({\n        confirmPassword: 'Passwords do not match'\n      });\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:3001/emp/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form) // Send the entire form object\n      });\n      if (!response.ok) {\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (jsonError) {\n          throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);\n        }\n        const fieldErrors = {};\n        if (Array.isArray(errorData.errors)) {\n          errorData.errors.forEach(error => {\n            fieldErrors[error.field] = error.message;\n          });\n        } else {\n          fieldErrors.general = 'Password reset failed';\n        }\n        setErrors(fieldErrors);\n        return;\n      }\n      window.alert('Password has been reset successfully');\n      navigate('/emp'); // Redirect to the employee login page\n    } catch (error) {\n      console.error('Error during password reset:', error);\n      setErrors({\n        general: error.message\n      });\n    }\n  }\n  const renderInput = (id, label, type) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      className: \"form-control\",\n      id: id,\n      value: form[id],\n      onChange: e => updateForm({\n        [id]: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), errors[id] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errors[id]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title text-center mb-4\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [renderInput('username', 'Username', 'text'), renderInput('newPassword', 'New Password', 'password'), renderInput('confirmPassword', 'Confirm Password', 'password'), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Submit\",\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message text-center\",\n                children: errors.general\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeForgotPassword, \"fmfxGp4B2Zd4Cccjt6BYGp2A4f8=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EmployeeForgotPassword","_s","form","setForm","username","newPassword","confirmPassword","errors","setErrors","navigate","updateForm","value","prev","onSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","jsonError","Error","status","statusText","fieldErrors","Array","isArray","forEach","error","field","message","general","window","alert","console","renderInput","id","label","type","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/jodyv/Desktop/APDS_POE-1/FRONT END/frontend/src/components/EmployeeForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ForgotPassword.css';\r\n\r\nexport default function EmployeeForgotPassword() {\r\n    const [form, setForm] = useState({\r\n        username: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const navigate = useNavigate();\r\n\r\n    function updateForm(value) {\r\n        setErrors({}); // Clear errors when updating form\r\n        setForm((prev) => ({ ...prev, ...value }));\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        if (form.newPassword !== form.confirmPassword) {\r\n            setErrors({ confirmPassword: 'Passwords do not match' });\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch('https://localhost:3001/emp/forgot-password', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(form) // Send the entire form object\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let errorData;\r\n                try {\r\n                    errorData = await response.json();\r\n                } catch (jsonError) {\r\n                    throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);\r\n                }\r\n                const fieldErrors = {};\r\n                if (Array.isArray(errorData.errors)) {\r\n                    errorData.errors.forEach(error => {\r\n                        fieldErrors[error.field] = error.message;\r\n                    });\r\n                } else {\r\n                    fieldErrors.general = 'Password reset failed';\r\n                }\r\n                setErrors(fieldErrors);\r\n                return;\r\n            }\r\n            window.alert('Password has been reset successfully');\r\n            navigate('/emp'); // Redirect to the employee login page\r\n        } catch (error) {\r\n            console.error('Error during password reset:', error);\r\n            setErrors({ general: error.message });\r\n        }\r\n    }\r\n\r\n    const renderInput = (id, label, type) => (\r\n        <div className=\"form-group mb-3\">\r\n            <label htmlFor={id}>{label}</label>\r\n            <input\r\n                type={type}\r\n                className=\"form-control\"\r\n                id={id}\r\n                value={form[id]}\r\n                onChange={(e) => updateForm({ [id]: e.target.value })}\r\n                required\r\n            />\r\n            {errors[id] && <div className=\"error-message\">{errors[id]}</div>}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title text-center mb-4\">Forgot Password</h3>\r\n                            <form onSubmit={onSubmit}>\r\n                                {renderInput('username', 'Username', 'text')}\r\n                                {renderInput('newPassword', 'New Password', 'password')}\r\n                                {renderInput('confirmPassword', 'Confirm Password', 'password')}\r\n                                <div className=\"form-group text-center\">\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Submit\"\r\n                                        className=\"btn btn-primary\"\r\n                                    />\r\n                                </div>\r\n                                {errors.general && <div className=\"error-message text-center\">{errors.general}</div>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}