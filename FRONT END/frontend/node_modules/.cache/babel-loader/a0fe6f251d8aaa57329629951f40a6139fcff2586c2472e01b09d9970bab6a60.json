{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\Master.dev\\\\APDS_POE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../AuthContext.js'; // Import the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [form, setForm] = useState({\n    usernameOrAccountNumber: '',\n    password: ''\n  });\n  const {\n    setAuth\n  } = useContext(AuthContext); // Use the context\n  const navigate = useNavigate();\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    try {\n      // Send a POST request to the server using HTTPS\n      const response = await fetch('https://localhost:3001/user/login', {\n        // Ensure the URL is correct\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      });\n\n      // Check if the response is ok (status in the range 200-299)\n      if (!response.ok) {\n        // Try to parse the error response as JSON\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (jsonError) {\n          // If parsing fails, the response is not JSON\n          throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);\n        }\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorData.message}`);\n      }\n      const data = await response.json();\n      console.log('Login successful:', data);\n\n      // Update the context with the token and username\n      setAuth({\n        token: data.token,\n        username: data.username\n      });\n\n      // Navigate to the home page or another page\n      navigate('/');\n    } catch (error) {\n      console.error('Error during login:', error);\n      window.alert(`An error occurred: ${error.message}`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"usernameOrAccountNumber\",\n          children: \"Username or Account Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"usernameOrAccountNumber\",\n          value: form.usernameOrAccountNumber,\n          onChange: e => updateForm({\n            usernameOrAccountNumber: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: form.password,\n          onChange: e => updateForm({\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/forgot-password\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"7Zx/PTu9sM29V+vPdmDyHoh0n4Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","Login","_s","form","setForm","usernameOrAccountNumber","password","setAuth","navigate","updateForm","value","prev","onSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","jsonError","Error","status","statusText","message","data","console","log","token","username","error","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/Master.dev/APDS_POE/FRONT END/frontend/src/components/login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../AuthContext.js'; // Import the AuthContext\r\n\r\nexport default function Login() {\r\n    const [form, setForm] = useState({\r\n        usernameOrAccountNumber: '',\r\n        password: ''\r\n    });\r\n\r\n    const { setAuth } = useContext(AuthContext); // Use the context\r\n    const navigate = useNavigate();\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Send a POST request to the server using HTTPS\r\n            const response = await fetch('https://localhost:3001/user/login', { // Ensure the URL is correct\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(form)\r\n            });\r\n\r\n            // Check if the response is ok (status in the range 200-299)\r\n            if (!response.ok) {\r\n                // Try to parse the error response as JSON\r\n                let errorData;\r\n                try {\r\n                    errorData = await response.json();\r\n                } catch (jsonError) {\r\n                    // If parsing fails, the response is not JSON\r\n                    throw new Error(`HTTP error! status: ${response.status}, message: ${response.statusText}`);\r\n                }\r\n                throw new Error(`HTTP error! status: ${response.status}, message: ${errorData.message}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Login successful:', data);\r\n\r\n            // Update the context with the token and username\r\n            setAuth({ token: data.token, username: data.username });\r\n\r\n            // Navigate to the home page or another page\r\n            navigate('/');\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n            window.alert(`An error occurred: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>Login</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='usernameOrAccountNumber'>Username or Account Number</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='form-control'\r\n                        id=\"usernameOrAccountNumber\"\r\n                        value={form.usernameOrAccountNumber}\r\n                        onChange={(e) => updateForm({ usernameOrAccountNumber: e.target.value })}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        id='password'\r\n                        value={form.password}\r\n                        onChange={(e) => updateForm({ password: e.target.value })}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='submit'\r\n                        value='Login'\r\n                        className='btn btn-primary'\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div className=\"form-group\">\r\n                <a href=\"/forgot-password\">Forgot Password?</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}