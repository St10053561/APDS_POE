{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Visual Studio Code Folders\\\\APDS_POE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css'; // styling for login\n\n// Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  // State to manage login credentials and errors\n  const [credentials, setCredentials] = useState({\n    usernameOrAccountNumber: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Function to update credentials state\n  function updateCredentials(value) {\n    return setCredentials(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // Function to handle form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n    setError(''); // Reset error\n\n    // Send a POST request to the server\n    const response = await fetch('https://localhost:3001/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      setError(errorData.message);\n      return;\n    }\n    const data = await response.json();\n    console.log('Login successful:', data);\n\n    // Store token in localStorage or state management solution\n    localStorage.setItem('token', data.token);\n    navigate('/home'); // Redirect to home page or desired route\n  }\n\n  // JSX to render the form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username or Account Number\",\n          onChange: e => updateCredentials({\n            usernameOrAccountNumber: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => updateCredentials({\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"jAmuGjQR0H5RJVYVk1rpVddZ24Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","usernameOrAccountNumber","password","error","setError","navigate","updateCredentials","value","prev","onSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","data","console","log","localStorage","setItem","token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/tanka/Visual Studio Code Folders/APDS_POE/FRONT END/frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css'; // styling for login\r\n\r\n// Login component\r\nexport default function Login() {\r\n    // State to manage login credentials and errors\r\n    const [credentials, setCredentials] = useState({\r\n        usernameOrAccountNumber: '',\r\n        password: ''\r\n    });\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Function to update credentials state\r\n    function updateCredentials(value) {\r\n        return setCredentials((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    // Function to handle form submission\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        setError(''); // Reset error\r\n\r\n        // Send a POST request to the server\r\n        const response = await fetch('https://localhost:3001/user/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(credentials)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            setError(errorData.message);\r\n            return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Login successful:', data);\r\n\r\n        // Store token in localStorage or state management solution\r\n        localStorage.setItem('token', data.token);\r\n        navigate('/home'); // Redirect to home page or desired route\r\n    }\r\n\r\n    // JSX to render the form\r\n    return (\r\n        <div className='login-container'>\r\n            <div className='login-card'>\r\n                <h3>Login</h3>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                <form onSubmit={onSubmit}>\r\n                    {/* Form Fields */}\r\n                    <input type=\"text\" placeholder=\"Username or Account Number\" onChange={(e) => updateCredentials({ usernameOrAccountNumber: e.target.value })} required />\r\n                    <input type=\"password\" placeholder=\"Password\" onChange={(e) => updateCredentials({ password: e.target.value })} required />\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}