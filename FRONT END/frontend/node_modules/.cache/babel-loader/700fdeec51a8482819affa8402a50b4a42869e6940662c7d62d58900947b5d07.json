{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';// Register component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Register(){// State to manage form data\nconst[form,setForm]=useState({name:'',password:''});// Hook to navigate programmatically\nconst navigate=useNavigate();// Function to update form state\nfunction updateForm(value){return setForm(prev=>{return{...prev,...value};});}// Function to handle form submission\nasync function onSubmit(e){e.preventDefault();// Create a new person object\nconst newPerson={...form};// Send a POST request to the server\nawait fetch('https://localhost:3001/user/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newPerson)}).catch(error=>{window.alert(error);return;});// Reset the form state\nsetForm({name:'',password:''});// Navigate to the home page\nnavigate('/');}// JSX to render the form\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\"// Input type is text\n,className:\"form-control\"// Bootstrap class for styling\n,id:\"name\"// ID for the input field\n,value:form.name// Value is bound to form.name state\n,onChange:e=>updateForm({name:e.target.value})// Update form state on change\n})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\"// Input type is text\n,className:\"form-control\"// Bootstrap class for styling\n,id:\"password\"// ID for the input field\n,value:form.password// Value is bound to form.password state\n,onChange:e=>updateForm({password:e.target.value})// Update form state on change\n})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\"// Input type is submit\n,value:\"Create Person\"// Text displayed on the button\n,className:\"btn btn-primary\"// Bootstrap class for styling\n})})]})]});}","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Register","form","setForm","name","password","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","className","children","htmlFor","type","id","onChange","target"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS LAB GUIDE/FRONT END/frontend/src/components/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Register component\r\nexport default function Register() {\r\n    // State to manage form data\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        password: ''\r\n    });\r\n\r\n    // Hook to navigate programmatically\r\n    const navigate = useNavigate();\r\n\r\n    // Function to update form state\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    // Function to handle form submission\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        // Create a new person object\r\n        const newPerson = { ...form };\r\n\r\n        // Send a POST request to the server\r\n        await fetch('https://localhost:3001/user/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newPerson)\r\n        })\r\n            .catch(error => {\r\n                window.alert(error);\r\n                return;\r\n            });\r\n\r\n        // Reset the form state\r\n        setForm({ name: '', password: '' });\r\n        // Navigate to the home page\r\n        navigate('/');\r\n    }\r\n\r\n    // JSX to render the form\r\n    return (\r\n        <div className='container'>\r\n            <h3>Register</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\" // Input type is text\r\n                        className=\"form-control\" // Bootstrap class for styling\r\n                        id='name' // ID for the input field\r\n                        value={form.name} // Value is bound to form.name state\r\n                        onChange={(e) => updateForm({ name: e.target.value })} // Update form state on change\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"text\" // Input type is text\r\n                        className=\"form-control\" // Bootstrap class for styling\r\n                        id='password' // ID for the input field\r\n                        value={form.password} // Value is bound to form.password state\r\n                        onChange={(e) => updateForm({ password: e.target.value })} // Update form state on change\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='submit' // Input type is submit\r\n                        value='Create Person' // Text displayed on the button\r\n                        className='btn btn-primary' // Bootstrap class for styling\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}