{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\OpenSSL-Win64\\\\APDS LAB GUIDE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [form, setForm] = useState({\n    name: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  //This function will handle the submission\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // passes the form data to the API on our backend\n    const newPerson = {\n      ...form\n    };\n    const response = await fetch('https://localhost:3001/user/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    const data = await response.json();\n    const {\n      token,\n      name\n    } = data;\n    console.log(name + \" \" + token);\n\n    //save the JWT to local storage\n    localStorage.setItem(\"JWT\", token);\n\n    //Optionally, save the username if needed\n    localStorage.setItem(\"name\", name);\n    setForm({\n      name: '',\n      password: ''\n    });\n    navigate('/');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" LOGIN \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"password\",\n          value: form.password,\n          onChange: e => updateForm({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"hmG0udovL6fnjB4y36ulSKwaciU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","form","setForm","name","password","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","response","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","data","json","token","console","log","localStorage","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS LAB GUIDE/FRONT END/frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    password: ''\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  //This function will handle the submission\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // passes the form data to the API on our backend\r\n    const newPerson = { ...form };\r\n\r\n    const response = await fetch('https://localhost:3001/user/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newPerson)\r\n    })\r\n      .catch(error => {\r\n        window.alert(error);\r\n        return;\r\n      });\r\n\r\n    const data = await response.json();\r\n    const { token, name } = data;\r\n    console.log(name + \" \" + token);\r\n\r\n    //save the JWT to local storage\r\n    localStorage.setItem(\"JWT\", token);\r\n\r\n    //Optionally, save the username if needed\r\n    localStorage.setItem(\"name\", name);\r\n\r\n    setForm({ name: '', password: '' });\r\n    navigate('/');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3> LOGIN </h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            id='name'\r\n            value={form.name}\r\n            onChange={(e) => updateForm({ name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            id='password'\r\n            value={form.password}\r\n            onChange={(e) => updateForm({ password: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <input\r\n            type='submit'\r\n            value='Login'\r\n            className='btn btn-primary'\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n  );\r\n\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}