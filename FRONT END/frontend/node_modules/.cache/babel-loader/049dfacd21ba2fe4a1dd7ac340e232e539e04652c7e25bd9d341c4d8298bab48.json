{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Visual Studio Code Folders\\\\APDS_POE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css'; // styling for register\n\n// Register component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  // State to manage form data and errors\n  const [form, setForm] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    accountNumber: '',\n    idNumber: ''\n  });\n  const [errors, setErrors] = useState([]);\n  const navigate = useNavigate();\n\n  // Function to update form state\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // Function to handle form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n    setErrors([]); // Reset errors\n\n    // Create a new user object\n    const newUser = {\n      ...form\n    };\n\n    // Send a POST request to the server\n    const response = await fetch('https://localhost:3001/user/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      setErrors(errorData.errors || [errorData.message]);\n      return;\n    }\n    const data = await response.json();\n    console.log('Registration successful:', data);\n\n    // Reset the form state\n    setForm({\n      firstName: '',\n      lastName: '',\n      email: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      accountNumber: '',\n      idNumber: ''\n    });\n\n    // Navigate to the login page\n    navigate('/login');\n  }\n\n  // JSX to render the form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-messages\",\n        children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"First Name\",\n          onChange: e => updateForm({\n            firstName: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Last Name\",\n          onChange: e => updateForm({\n            lastName: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => updateForm({\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          onChange: e => updateForm({\n            username: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => updateForm({\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          onChange: e => updateForm({\n            confirmPassword: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Account Number\",\n          onChange: e => updateForm({\n            accountNumber: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"ID Number\",\n          onChange: e => updateForm({\n            idNumber: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"HiSlzum/S5jREPUYvUjnUHL4Ydg=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","form","setForm","firstName","lastName","email","username","password","confirmPassword","accountNumber","idNumber","errors","setErrors","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newUser","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","error","index","type","placeholder","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/tanka/Visual Studio Code Folders/APDS_POE/FRONT END/frontend/src/components/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Register.css'; // styling for register\r\n\r\n// Register component\r\nexport default function Register() {\r\n    // State to manage form data and errors\r\n    const [form, setForm] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        accountNumber: '',\r\n        idNumber: ''\r\n    });\r\n    const [errors, setErrors] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    // Function to update form state\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    // Function to handle form submission\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        setErrors([]); // Reset errors\r\n\r\n        // Create a new user object\r\n        const newUser = { ...form };\r\n\r\n        // Send a POST request to the server\r\n        const response = await fetch('https://localhost:3001/user/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newUser)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            setErrors(errorData.errors || [errorData.message]);\r\n            return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Registration successful:', data);\r\n\r\n        // Reset the form state\r\n        setForm({\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            accountNumber: '',\r\n            idNumber: ''\r\n        });\r\n\r\n        // Navigate to the login page\r\n        navigate('/login');\r\n    }\r\n\r\n    // JSX to render the form\r\n    return (\r\n        <div className='register-container'>\r\n            <div className='register-card'>\r\n                <h3>Register</h3>\r\n                {errors.length > 0 && (\r\n                    <div className=\"error-messages\">\r\n                        {errors.map((error, index) => (\r\n                            <p key={index} className=\"error\">{error}</p>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                <form onSubmit={onSubmit}>\r\n                    {/* Form Fields */}\r\n                    <input type=\"text\" placeholder=\"First Name\" onChange={(e) => updateForm({ firstName: e.target.value })} required />\r\n                    <input type=\"text\" placeholder=\"Last Name\" onChange={(e) => updateForm({ lastName: e.target.value })} required />\r\n                    <input type=\"email\" placeholder=\"Email\" onChange={(e) => updateForm({ email: e.target.value })} required />\r\n                    <input type=\"text\" placeholder=\"Username\" onChange={(e) => updateForm({ username: e.target.value })} required />\r\n                    <input type=\"password\" placeholder=\"Password\" onChange={(e) => updateForm({ password: e.target.value })} required />\r\n                    <input type=\"password\" placeholder=\"Confirm Password\" onChange={(e) => updateForm({ confirmPassword: e.target.value })} required />\r\n                    <input type=\"text\" placeholder=\"Account Number\" onChange={(e) => updateForm({ accountNumber: e.target.value })} required />\r\n                    <input type=\"text\" placeholder=\"ID Number\" onChange={(e) => updateForm({ idNumber: e.target.value })} required />\r\n                    <button type=\"submit\">Register</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}