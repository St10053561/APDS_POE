{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\OpenSSL-Win64\\\\APDS LAB GUIDE\\\\FRONT END\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setUsername\n}) {\n  _s();\n  const [form, setForm] = useState({\n    name: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    try {\n      // Send a POST request to the server using HTTPS\n      const response = await fetch('https://localhost:3001/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      });\n\n      // Check if the response is ok (status in the range 200-299)\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorData.message}`);\n      }\n      const data = await response.json();\n      console.log('Login successful:', data);\n\n      // Store the token in local storage\n      localStorage.setItem('token', data.token);\n\n      // Update the username state\n      setUsername(data.name);\n\n      // Navigate to the home page or another page\n      navigate('/');\n    } catch (error) {\n      console.error('Error during login:', error);\n      window.alert(`An error occurred: ${error.message}`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: form.password,\n          onChange: e => updateForm({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"tjGSer4vcnJiKP8/LAGVUGXUdjU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setUsername","_s","form","setForm","name","password","navigate","updateForm","value","prev","onSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","status","message","data","console","log","localStorage","setItem","token","error","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/OpenSSL-Win64/APDS LAB GUIDE/FRONT END/frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Login({ setUsername }) {\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        password: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Send a POST request to the server using HTTPS\r\n            const response = await fetch('https://localhost:3001/user/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(form)\r\n            });\r\n\r\n            // Check if the response is ok (status in the range 200-299)\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(`HTTP error! status: ${response.status}, message: ${errorData.message}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Login successful:', data);\r\n\r\n            // Store the token in local storage\r\n            localStorage.setItem('token', data.token);\r\n\r\n            // Update the username state\r\n            setUsername(data.name);\r\n\r\n            // Navigate to the home page or another page\r\n            navigate('/');\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n            window.alert(`An error occurred: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>Login</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='form-control'\r\n                        id=\"name\"\r\n                        value={form.name}\r\n                        onChange={(e) => updateForm({ name: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        id='password'\r\n                        value={form.password}\r\n                        onChange={(e) => updateForm({ password: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='submit'\r\n                        value='Login'\r\n                        className='btn btn-primary'\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}